@using GameWebSite.Web.Models
@using GameWebsite.Data.Models
@using GameWebsite.Service.Models.Posts
@{
    Layout = "_Layout";
}
@model PostViewData
@inject UserManager<GameWebsiteUser> UserManager
@inject SignInManager<GameWebsiteUser> SignInManager
@{
    List<string> roles = new List<string>();
    if (SignInManager.IsSignedIn(User))
    {
        var user = await UserManager.GetUserAsync(User);
        roles = new List<string>(await UserManager.GetRolesAsync(user));
    }
}
<!DOCTYPE html>
<html lang="en">

<head>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-KK94CHFLLe+nY2dmCWGMq91rCGa5gtU4mk92HdvYe+M/SXH301p5ILy+dN9+nJOZ" crossorigin="anonymous">
</head>

<body>
    @if (roles.Contains("User"))
    {
        <ul class="nav">
            <li class="nav-item">
                <a class="nav-link" asp-controller="Post" asp-action="Create" asp-route-categoryId="@(Model.CategoryId)">Create Post in this category</a>
            </li>
        </ul>
    }
    @foreach(PostDto post in Model.Posts) 
    {
      <div class="card" style="width: 18rem;">
        <div class="card-body">
          <h5 class="card-title">@(post.Name)</h5>
          <p class="card-text">@(post.Content)</p>
          <br/>
          <p class="card-text">By @(post.CreatedBy.UserName)</p
        </div>
      </div>
    }
    @if (Model.Posts.Count == 0) {
        <p>There are no posts here</p>
    }
</body>
</html>